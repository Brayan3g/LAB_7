/* UNIVERSIDAD DEL VALLE DE GUATEMALA
 * DEPARTAMENTO DE INGENIERIA ELCTRONICA & MECATRONICA
 * CURSO DE PROGRAMACION DE MICROCONTROLADORES
 * LABORATORIO No.7
 * 
 * File:   main7.c
 * Author: BRAYAN GABRIEL GIRON GARCIA
 *
 * Created on 13 de abril de 2021, 09:21 PM
 */
//-----------------------------------------------------------------------------------------------------------------------------------
// CONFIG1
//-----------------------------------------------------------------------------------------------------------------------------------
#pragma config FOSC = INTRC_NOCLKOUT// Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config MCLRE = OFF      // RE3/MCLR pin function select bit (RE3/MCLR pin function is digital input, MCLR internally tied to VDD)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = OFF      // Brown Out Reset Selection bits (BOR disabled)
#pragma config IESO = OFF       // Internal External Switchover bit (Internal/External Switchover mode is disabled)
#pragma config FCMEN = OFF      // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is enabled)
#pragma config LVP = ON         // Low Voltage Programming Enable bit (RB3/PGM pin has PGM function, low voltage programming enabled)

//-----------------------------------------------------------------------------------------------------------------------------------
// CONFIG2
//-----------------------------------------------------------------------------------------------------------------------------------
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF        // Flash Program Memory Self Write Enable bits (Write protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#include <stdint.h>             // TIPOS DE DATOS ESTANDAR Y OTROS.


//______________________________________________________________________________
// DECLARACION DE VARIABLES
//______________________________________________________________________________

uint8_t V;
uint8_t V1;
uint8_t UNID;
uint8_t DECE;
uint8_t CENT;
uint8_t SELEC;

//______________________________________________________________________________
// PROTOTIPOS DE FUNCIONES
//______________________________________________________________________________

void SETUP(void);
int  TABLA(int V1);
void DECIMAL(void);

//______________________________________________________________________________
// FUNCION DE INTERRUPCIONES
//______________________________________________________________________________

void __interrupt() isr(void){
    
//----------------------------- INTERRUPCION TMR0 ------------------------------    
    if(T0IF == 1) {
        T0IF  = 0;
        TMR0  = 236;
        PORTB = 0;
        if(SELEC == 0){
            V1    = UNID;
            PORTC = TABLA(V1);
            RB3   = 1;
            SELEC = 1;
            return;
        }    
        if(SELEC == 1){
            V1    = DECE;
            PORTC = TABLA(V1);
            RB4   = 1;
            SELEC = 2;
            return;
        }    
        if(SELEC == 2){
            V1    = CENT;
            PORTC = TABLA(V1);
            RB5   = 1;
            SELEC = 0;
            return;
        } 
    }
//----------------------------- INTERRUPCION RBIF ------------------------------     
    if(RBIF == 1){
        if(RB0 == 0){
            PORTA++;
        }
        if(RB1 == 0){
            PORTA--;
        }
        RBIF = 0;
    }
}
//______________________________________________________________________________
// FUNCION PRINCIPAL (MAIN)
//______________________________________________________________________________

void main(void){
     SETUP();
     while(1){
         V = PORTA;
         DECIMAL();    
     }
}
//______________________________________________________________________________
//TABLA DE VALORES DE LOS DISPLAYS
//______________________________________________________________________________

int TABLA(int V1){
    int w;
    switch (V1){
        case 0:
        w = 0b00111111;
        break;
        case 1:
        w = 0b00000110;
        break;
        case 2:
        w = 0b01011011;
        break;
        case 3:
        w = 0b01001111;
        break;
        case 4:
        w = 0b01100110;
        break;
        case 5:
        w = 0b01101101;
        break;
        case 6:
        w = 0b01111101;
        break;
        case 7:
        w = 0b00000111;
        break;
        case 8:
        w = 0b01111111;
        break;
        case 9:
        w = 0b01101111;
        break;
        default:;    
    }
    return w;
}

//______________________________________________________________________________
// FUNCION DE DIVISION
//______________________________________________________________________________

void DECIMAL(void){
     CENT =  V/100;
     DECE = (V - CENT*100)/10;
     UNID = (V - CENT*100 - DECE*10)/1;     
} 

//______________________________________________________________________________
// FUNCION DE CONFIGURACION
//______________________________________________________________________________

void SETUP(void){
    
//------------------- CONFIGURACION DE ENTRADAS Y SALIDAS ----------------------
    ANSEL  = 0x00;
    ANSELH = 0x00;
 
    TRISB = 0b00000011;
    TRISC = 0x00;
    TRISA = 0x00;
    
    PORTB = 0x00;
    PORTC = 0x00;
    PORTA = 0x00;
    
//---------------------- CONFIGURACION DE RELOJ A 4MHZ -------------------------
    OSCCONbits.IRCF2 = 1;
    OSCCONbits.IRCF1 = 1;
    OSCCONbits.IRCF0 = 0;
    OSCCONbits.SCS   = 1;
    
//------------------------- CONFIGURACION DE BOTONES ---------------------------
    OPTION_REGbits.nRBPU = 0;
    WPUB = 0b00000011;
    IOCBbits.IOCB0 = 1;
    IOCBbits.IOCB1 = 1;
    
//-------------------------- CONFIGURACION DEL TMRO ----------------------------
    OPTION_REGbits.T0CS = 0;
    OPTION_REGbits.PSA  = 0;
    OPTION_REGbits.PS2  = 1;
    OPTION_REGbits.PS1  = 1;
    OPTION_REGbits.PS0  = 1;
  
//---------------------- CONFIGURACION DE INTERRUPCIONES -----------------------
    INTCONbits.GIE  = 1;
    INTCONbits.RBIF = 1;
    INTCONbits.RBIE = 1;
    INTCONbits.T0IE = 1;
}
